how to copy public and private key of hosts sys?
modify existing job?
to chk containers: cmd: docker ps -a
to chk images: cmd: docker images
USECASES:
setup ansible
trobleshooting: unable to setup ansible
integrate ansible with jenkins
creating an ansible playbook
common issues faced during practice
run ansible playbook from jenkins
update ansible playbook to to delete and create docker containers
dockerhub integration with ansible
tagging docker image using ansible playbooks
jenkins job to deploy on docker container through dockerhub.
jenkins job to deploy a war file on docker container using ansible.

Setup Ansible:create new instance & login then do below
cmd:yum install python
    yum install python-pip
    pip install ansible
    ansible --version
    mkdir /etc/ansible
    useradd ansibleadmin then setup passwd
    visudo then shift+g to go end of file then print ansadmin ALL=(ALL) NOPASSWD: ALL. //so that won't ask pwd when open the server
    yum install docker
    service docker status
    service docker start
    usermod -aG docker ansadmin
    vi /etc/ssh/ssh_config. then search passwd no to yes
    service sshd reload
    su - ansadmin
    
    ssh-keygen
    ssh-copyid ansadmin@IPofDockerhost
    then go login to docker host system using ssh ansadmin@IPofDockerhost. //without pwd
    
    logout
    change hostname
    cmd:hostname ansible-control-node
    sudo su -
    
    check the communication bw the system using ping for that create host file int othe ansible system using
    got to cd /etc/ansible. 
    sudo su -//no file will be here
    sudo vi hosts
    add ipofDokcersys
    add localhost
    ping test:
    cmd: ansible all -m ping
    local host is failing to success for that add key to localhost using cmd: ssh-copy-id localhost
    then run cmd: ansible all -m ping now 2 are green.
    go back to docker host:
    create user called ansadmin
    useradd ansadmin. the set pwd
    
    integrate ansible with jenkins:
    jump into jenkins console-> go to UI-> got to managed jenkins -> configure system -> publish over ssh -> click add button then fill below options.
    name:ans lgin
    hostname: Ipofansibleserver using cmd: ip addr
    username:
    remote directory:
    use passwd authentication:
    test: success
    then create a new job : deploy_on_contsiner_using_ansible
    goto ansible servr to create new directory:
    cd /opt
    sudo mkdir docker
    sudo chown -R ansadmin:ansadmin /opt/docker.  //to give ownership to the directory[bz created as root]
    
    goto ui run job and chk copied artifacts into the ansible server.
    
    creating an ansible playbook: to create docker image by using docker file & war file.
    vi simple-devops-image.yaml
    ---
    hosts:all
    become: true
      tasks: build docker image using war file
      - name: stop running container
        command: docker stop simple-devops-container
        ignore_errors: yes
      - name: remove stopoed container
        command: docker rm simple-devops-container
        ignore_errors: yes
      - name: remove docker image
        command: docker rm  simple-devops-image
        ignore_errors: yes
      - name: build docker image using war file
        command: docker build -t simple-devops-image
        args: /opt/docker
        - name: create tag to image 
        command: docker tag simple-devops-image /yankil/simple-devops-image
        - name: push image on to dockerhub
        command: docker push /yankil/simple-devops-image
        - name: pull image from dockerhub
        command: docker pull /yankil/simple-devops-image
       - name: create container using docker image
        command: docker run -d simple-devops-container -p 8080:8080 simple-devops-image
        
   vi hosts  //to create image only in localhost not in the target sys
   type localhost then save a file
   
   run playbook:
   cmd: ansible-playbook -i hosts simple-devops-image.yaml --check
   ansible-playbook -i hosts simple-devops-image.yaml // success
  ansible-playbook -i hosts simple-devops-image.yaml --limit localhost. //to create only in localhost
  
   run ansible playbook from jenkins: in the job use below command to run the job.
   execute command: ansible-playbook -i /opt/ansible/hosts /opt/ansible/simple-devops-image.yaml
   
   when change in the code and get new commit then create new image by taking new webapp also create container to test activity using pollscm 
   though jenkins to pickup changes automate.
   
   dockerhub integration with ansible: to push all images which r created using ansible play book.so that all 100 of target systems pull image from dockerhub then creates container.
   if don't have dockerhub accnt the create new one
   
    job:deploy_on_docker_container_suing_ansible
    ansible-playbook -i /opt/docker/hosts /opt/docker/simple-devops-image.yaml --limit localhost
    ansible-playbook -i /opt/docker/hosts /opt/docker/simple-devops-project.yaml --limit ipoftargetsys
    
    if container fails who will take care , for this kubernates is comes into the picture
    
    
